
# 1;//proirity 优先级
# java.lang.String as string;// using String 调用java的字符串
*# java.lang.Integer as int;//global using Integer 全局调用整型
string a <- "a";
a<< "1";// a = "a1"; //贴靠注入
a>> "1";// a = "1a1"//左贴靠注入
int b <- 1;// b = 1;
b -> int c;// c = b = 1;
b++;//b=2;不带-> 和 <-的为本身调用
int d <- b++;// d = 3; b = 2;  带<-的为本身不调用，其他项赋值并++;
for 1 << 3 {
	int e <-; //隐式调用也可以用$替代如int e <- $; // 类似于for(int temp = 1; temp > 3; temp++) 这个$相当于temp;
}

switch(a) {
    case 1:
    case 2:
}

for(1 >> 3) {
	//相当于for(int temp = 3; temp > 1; temp--);
}

array a = 1, 3, 6, 77, 11 //array 数组， list都可这么写
map b = 1->1, 2->2, 3->3, 4->4, 5<-5 //map, 箭头指向的是key

——————————————————————————
基础写法
1//数字型
1.0d//双精数
1.0f//浮点数
1l//长整型
1.0//按长度自动转换单双精度，只在var val global中实现 其他的按数字置换
N"1001";//字符型数字 使用字符计算法
I"1";//字符整型 使用字符计算法
L"1";//当L字符所表示字符串里面为整型时，会自动转换为 长整型字符型
F"1.0";// 浮点型字符串
D"1.001"// 双精数型字符串
@"www.baidu.com/" url型
"你好世界"//常规字符串型
'c' char字形
L"
你好世界
你好世界
你好世界"//带L的为多行的


——————————————————————————

支持全角符号

——————————————————————————
StringDouble实现原理
示例为1000.1111111
把小数点拆分
小数点前，每3位存储位一个整型，小数点后拆分为每3个一个整型，分段算数，保证精度，同时保证数集无限长
